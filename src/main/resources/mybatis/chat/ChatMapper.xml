<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.heartlink.chat.model.mapper.ChatMapper">

    <!-- 매칭 상태가 Y인 사용자 목록 조회 -->
    <select id="getActiveChatList" parameterType="int" resultType="com.heartlink.chat.model.dto.ChatDto">
        SELECT
        s.MATCHING_NO AS matchingNo,
        CASE
        WHEN s.MATCHING_USER_NO = #{userNo} THEN u2.BASIC_USER_NICKNAME
        ELSE u1.BASIC_USER_NICKNAME
        END AS nickname,
        CASE
        WHEN s.MATCHING_USER_NO = #{userNo} THEN p2.PHOTO_PATH
        ELSE p1.PHOTO_PATH
        END AS photoPath,
        CASE
        WHEN s.MATCHING_USER_NO = #{userNo} THEN p2.PHOTO_NAME
        ELSE p1.PHOTO_NAME
        END AS photoName,
        CASE
        WHEN s.MATCHING_USER_NO = #{userNo} THEN u2.BASIC_USER_NO
        ELSE u1.BASIC_USER_NO
        END AS targetUserNo,  <!-- 상대방 유저 번호 -->
        l.CONTENT AS lastMessage
        FROM
        MATCHING_STATE s
        JOIN
        BASIC_USER u1 ON s.MATCHING_USER_NO = u1.BASIC_USER_NO
        JOIN
        BASIC_USER u2 ON s.MATCHED_USER_NO = u2.BASIC_USER_NO
        LEFT JOIN
        BASIC_USER_PHOTO p1 ON u1.BASIC_USER_NO = p1.BASIC_USER_NO
        LEFT JOIN
        BASIC_USER_PHOTO p2 ON u2.BASIC_USER_NO = p2.BASIC_USER_NO
        LEFT JOIN (
        SELECT
        MATCHING_NO,
        CONTENT
        FROM
        MATCHING_CHATTING_LOG
        WHERE
        CHAT_INDATE IN (
        SELECT MAX(CHAT_INDATE)
        FROM MATCHING_CHATTING_LOG
        GROUP BY MATCHING_NO
        )
        ) l ON l.MATCHING_NO = s.MATCHING_NO
        WHERE
        (s.MATCHING_USER_NO = #{userNo} OR s.MATCHED_USER_NO = #{userNo})
        AND s.MATCHING_STATE = 'Y'
        AND s.MATCHING_CHATTING_STATE = 'N' <!-- 채팅이 활성화된 상태만 표시 -->
    </select>

    <!-- 특정 매칭의 채팅 로그 조회 -->
    <select id="getChatLogs" parameterType="long" resultType="com.heartlink.chat.model.dto.ChatDto">
        SELECT
        c.CONTENT AS content,
        c.MESSAGE_TYPE AS messageType,
        c.CHAT_INDATE AS timestamp,
        u.BASIC_USER_NICKNAME AS nickname,
        u.BASIC_USER_NO AS basicUserNo,
        c.MATCHING_NO AS matchingNo,
        p.PHOTO_PATH AS photoPath,
        p.PHOTO_NAME AS photoName
        FROM
        MATCHING_CHATTING_LOG c
        JOIN
        BASIC_USER u ON c.BASIC_USER_NO = u.BASIC_USER_NO
        JOIN
        BASIC_USER_PHOTO p ON u.BASIC_USER_NO = p.BASIC_USER_NO
        WHERE
        c.MATCHING_NO = #{matchingNo}
        ORDER BY
        c.CHAT_INDATE ASC
    </select>

    <!-- 채팅 로그 삽입 -->
    <insert id="insertChatLog">
        INSERT INTO MATCHING_CHATTING_LOG (
        MATCHING_NO,
        BASIC_USER_NO,
        CHAT_INDATE,
        MESSAGE_TYPE,
        CONTENT
        ) VALUES (
        #{matchingNo},
        #{basicUserNo},
        CURRENT_TIMESTAMP,
        #{messageType},
        #{content}
        )
    </insert>

    <!-- 매칭 상태 업데이트 (채팅 종료) -->
    <update id="updateChatStatus">
        UPDATE MATCHING_STATE
        SET MATCHING_CHATTING_STATE = 'Y'
        WHERE MATCHING_NO = #{matchingNo}
        AND (MATCHING_USER_NO = #{userNo} OR MATCHED_USER_NO = #{userNo})
    </update>

</mapper>
