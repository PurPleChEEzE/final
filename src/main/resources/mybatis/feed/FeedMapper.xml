<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heartlink.feed.model.mapper.FeedMapper">
    <resultMap id="resultMapFeed" type="FeedDto">
        <result column="feed_no" property="feedNo" />
        <result column="author_user_no" property="authorUserNo" />
        <result column="feed_title" property="feedTitle" />
        <result column="feed_content" property="feedContent" />
        <result column="feed_indate" property="feedIndate" />
        <result column="feed_update" property="feedUpdate" />
        <result column="feed_DELETE" property="feedDelete" />
        <result column="feed_tag" property="feedTag" />
        <result column="basic_user_nickname" property="basicUserNickname" />
        <result column="commnet_user_no" property="commentUserNo" />
        <result column="like_cnt" property="likeCount" />

    </resultMap>

    <resultMap id="commentResultMap" type="FeedCommentDto">
        <result column="comment_no" property="commentNo"/>
        <result column="comment_user_nickname" property="commentUserNickname"/>
        <result column="comment_content" property="commentContent"/>
        <result column="comment_indate" property="commentIndate"/>
        <result column="comment_user_no" property="commentUserNo"/>
    </resultMap>


    <select id="getFeedList" resultMap="resultMapFeed">
        SELECT *
        FROM (
        SELECT
            bu.BASIC_USER_NICKNAME,
            AUTHOR_USER_NO,
            FEED_TITLE,
            FEED_CONTENT,
            FEED_INDATE,
            FEED_UPDATED_DATE,
            FEED_TAG,
            FEED_NO,
            ROW_NUMBER() OVER (
            <choose>
                <when test="feedArray.equals('작성일')">
                    ORDER BY f.FEED_INDATE DESC
                </when>
                <when test="feedArray.equals('좋아요 수')">
                    ORDER BY (SELECT COUNT(*) FROM FEED_LIKES WHERE FEED_NO = f.FEED_NO) DESC
                </when>
                <otherwise>
                    ORDER BY f.FEED_INDATE DESC
                </otherwise>
            </choose>
            ) AS row_num
            FROM FEEDS f
            JOIN BASIC_USER bu ON f.AUTHOR_USER_NO = BASIC_USER_NO
            WHERE FEED_DELETE IS NULL
            <choose>
                <when test="feedTag.equals('전체')">
                    <!-- 모든 태그 포함 -->
                </when>
                <when test="feedTag.equals('매칭 후기')">
                    AND FEED_TAG = '매칭 후기'
                </when>
                <when test="feedTag.equals('자유 보드')">
                    AND FEED_TAG = '자유 보드'
                </when>
                <when test="feedTag.equals('연애 조언')">
                    AND FEED_TAG = '연애 조언'
                </when>
            </choose>
        )
        WHERE row_num BETWEEN #{start} AND #{end}
    </select>


    <select id="getCommentList" resultMap="commentResultMap">
        SELECT bu.BASIC_USER_NICKNAME AS COMMENT_USER_NICKNAME,
               fc.COMMENT_CONTENT ,
               fc.COMMENT_INDATE,
               fc.COMMENT_NO,
               fc.COMMENT_USER_NO
        FROM FEED_COMMENTS fc
                 JOIN BASIC_USER bu
                      ON fc.COMMENT_USER_NO = bu.BASIC_USER_NO
        WHERE FEED_NO = #{feedNo}
        AND fc.COMMENT_DELETE IS NULL
        ORDER BY COMMENT_INDATE ASC
    </select>

    <select id="getLikeCount" resultType="java.lang.Integer">
        SELECT COALESCE(COUNT(DISTINCT BASIC_USER_NO), 0) AS LIKE_CNT
        FROM FEED_LIKES fl
        WHERE FEED_NO = #{feedNo}
    </select>

    <select id="getLikedUser" resultType="java.lang.Integer">
        SELECT fl.BASIC_USER_NO FROM FEEDS f
        JOIN FEED_LIKES fl ON f.FEED_NO = fl.FEED_NO
        WHERE f.FEED_NO = #{feedNo}
    </select>

    <insert id="setFeedEnroll">
        INSERT INTO FEEDS f VALUES(
            FEEDS_SEQ.NEXTVAL,
            #{authorUserNo},
            #{feedTitle},
            #{feedContent},
            SYSDATE,
            NULL,
            NULL,
            #{feedTag}
        )
    </insert>

    <insert id="setCommentEnroll">
        INSERT INTO FEED_COMMENTS fc VALUES(
            FEED_COMMENT_SEQ.NEXTVAL,
            #{feedNo},
            #{commentUserNo},
            #{commentContent},
            SYSDATE,
            NULL
        )
    </insert>

    <select id="setModifyFeed" resultMap="resultMapFeed">
        SELECT FEED_TITLE , FEED_CONTENT ,FEED_TAG, FEED_NO
        FROM FEEDS f
        WHERE FEED_NO = #{feedNo}
    </select>

    <update id="setUpdateFeed">
        UPDATE FEEDS
        SET
            FEED_TITLE = #{feedTitle},
            FEED_CONTENT = #{feedContent},
            FEED_UPDATED_DATE = SYSDATE,
            FEED_TAG = #{feedTag}
        WHERE FEED_NO = #{feedNo}
    </update>

    <update id="setCommentDelete">
        UPDATE FEED_COMMENTS
        SET COMMENT_DELETE = SYSDATE
        WHERE COMMENT_NO = #{commentNo}
    </update>

    <update id="setFeedDelete">
        UPDATE FEEDS
        SET FEED_DELETE = SYSDATE
        WHERE FEED_NO = #{feedNo}
    </update>

    <insert id="setFeedLike">
        INSERT INTO FEED_LIKES fl VALUES (
            #{feedNo},
            #{userNo},
            SYSDATE
            )
    </insert>

    <insert id="setFeedLikeCancel">
        DELETE FROM FEED_LIKES fl
        WHERE fl.FEED_NO = #{feedNo}
        AND fl.BASIC_USER_NO = #{userNo}
    </insert>

    <select id="getTopFeedList" resultMap="resultMapFeed">
        SELECT COALESCE(COUNT(DISTINCT BASIC_USER_NO), 0) AS like_cnt,
               fl.FEED_NO
        FROM FEED_LIKES fl
                 JOIN FEEDS f
                      ON fl.FEED_NO = f.FEED_NO
        WHERE FEED_DELETE IS NULL
        GROUP BY fl.FEED_NO
        ORDER BY LIKE_CNT DESC
            FETCH FIRST 3 ROWS ONLY
    </select>

    <select id="getNewFeedList" resultMap="resultMapFeed">
        SELECT f.FEED_NO
        FROM FEEDS f
        WHERE FEED_DELETE IS NULL
        ORDER BY f.FEED_INDATE  DESC
            FETCH FIRST 3 ROWS ONLY
    </select>
    
    <select id="getTopFeedDetail" resultMap="resultMapFeed">
        SELECT f.FEED_TITLE ,
        f.FEED_CONTENT ,
        f.AUTHOR_USER_NO,
        f.FEED_TAG,
        bu.BASIC_USER_NICKNAME
        FROM FEEDS f
        JOIN BASIC_USER bu
        ON f.AUTHOR_USER_NO = bu.BASIC_USER_NO
        WHERE FEED_NO = #{feedNo}
    </select>

</mapper>